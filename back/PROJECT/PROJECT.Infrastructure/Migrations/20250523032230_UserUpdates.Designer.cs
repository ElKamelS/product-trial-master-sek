// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROJECT.Infrastructure.Data;

#nullable disable

namespace PROJECT.Infrastructure.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20250523032230_UserUpdates")]
    partial class UserUpdates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PROJECT.Domain.Entities.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("InventoryStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("createdAt")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("internalReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<int>("shellId")
                        .HasColumnType("int");

                    b.Property<int>("updatedAt")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PROJECT.Domain.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.Property<int>("Cartid")
                        .HasColumnType("int");

                    b.Property<int>("UsersCartid")
                        .HasColumnType("int");

                    b.HasKey("Cartid", "UsersCartid");

                    b.HasIndex("UsersCartid");

                    b.ToTable("CartProducts", (string)null);
                });

            modelBuilder.Entity("ProductUser1", b =>
                {
                    b.Property<int>("UsersWishlistid")
                        .HasColumnType("int");

                    b.Property<int>("Wishlistid")
                        .HasColumnType("int");

                    b.HasKey("UsersWishlistid", "Wishlistid");

                    b.HasIndex("Wishlistid");

                    b.ToTable("WishlistProducts", (string)null);
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.HasOne("PROJECT.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("Cartid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROJECT.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersCartid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductUser1", b =>
                {
                    b.HasOne("PROJECT.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersWishlistid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROJECT.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("Wishlistid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
